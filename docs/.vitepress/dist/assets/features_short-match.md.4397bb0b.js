import{_ as n,c as o,a,b as s,d as t,e as p,o as l,r as c}from"./app.d9fbe7ee.js";const _=JSON.parse('{"title":"Short Match","description":"","frontmatter":{},"headers":[],"relativePath":"features/short-match.md"}'),r={name:"features/short-match.md"},i={id:"short-match",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#short-match","aria-hidden":"true"},"#",-1),D=p(`<p>The <code>match</code> expression was introduced in PHP 8.0 to improve on the existing <code>switch</code> statement and provide a clean way to pattern match against a value.</p><p>In more complex scenarios, it&#39;s possible to match against a boolean value <code>true</code> and use arbitrarily complex patterns in each condition. To improve developer experience, PXP allows omitting the condition altogether to produce a &quot;short match&quot; which matches against <code>true</code> by default.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-xCtJ3" id="tab-pDLtnOb" checked="checked"><label for="tab-pDLtnOb">match.pxp</label><input type="radio" name="group-xCtJ3" id="tab-icy80Tb"><label for="tab-icy80Tb">match.php</label></div><div class="blocks"><div class="language-pxp active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">pxp</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">match</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">is_admin </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-php line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">match</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">is_admin </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div>`,3);function y(h,m,C,F,u,A){const e=c("Badge");return l(),o("div",null,[a("h1",i,[s("Short Match "),t(e,{type:"tip",text:"implemented"}),s(),d]),D])}const v=n(r,[["render",y]]);export{_ as __pageData,v as default};
